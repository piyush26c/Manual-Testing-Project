/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manualtesting;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JFrame;

/**
 *
 * @authors Piyush Rajendra Chaudhari <piyushrc26@gmail.com>
 * Rohit Balasaheb Bangar    <bangarrohit7057@gmail.com>
 * Shalakha Vijaykumar Bang  <shalakhabang99@gmail.com>
 * Mayuresh Rajesh Dindorkar <dmayuresh99@gmail.com>
 *
 * Project Name: FUN WITH NUMBERS Objective: Swing and AWT based Graphical User
 * Interface Java Application intended for learning Manual Testing.*
 *
 * Date: 05 September 2020. Day: Saturday
 */
public class Square_Frame extends javax.swing.JFrame {

    /**
     * Creates new form Square_Frame
     */
    public Square_Frame() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setResizable(true);
        this.getContentPane().setBackground(new Color(229, 209, 255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputval = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        sideradio = new javax.swing.JRadioButton();
        diagonalradio = new javax.swing.JRadioButton();
        result = new javax.swing.JTextField();
        perimeter = new javax.swing.JRadioButton();
        area = new javax.swing.JRadioButton();
        backbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fun With Numbers");
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Square");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(660, 70, 130, 50);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel2.setText("Input:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(530, 210, 60, 30);

        inputval.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        inputval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputvalActionPerformed(evt);
            }
        });
        getContentPane().add(inputval);
        inputval.setBounds(610, 210, 210, 40);

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButton1.setText("Result");
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(660, 430, 130, 40);

        buttonGroup1.add(sideradio);
        sideradio.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        sideradio.setText("Side");
        sideradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sideradioActionPerformed(evt);
            }
        });
        getContentPane().add(sideradio);
        sideradio.setBounds(593, 150, 120, 35);

        buttonGroup1.add(diagonalradio);
        diagonalradio.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        diagonalradio.setText("Diagonal");
        getContentPane().add(diagonalradio);
        diagonalradio.setBounds(723, 150, 120, 35);

        result.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultActionPerformed(evt);
            }
        });
        getContentPane().add(result);
        result.setBounds(610, 350, 220, 40);

        buttonGroup2.add(perimeter);
        perimeter.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        perimeter.setText("Perimeter");
        perimeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perimeterActionPerformed(evt);
            }
        });
        getContentPane().add(perimeter);
        perimeter.setBounds(603, 280, 120, 35);

        buttonGroup2.add(area);
        area.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        area.setText("Area");
        getContentPane().add(area);
        area.setBounds(737, 280, 90, 35);

        backbtn.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        backbtn.setText("BACK");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });
        getContentPane().add(backbtn);
        backbtn.setBounds(20, 610, 140, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputvalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputvalActionPerformed
    public static boolean isFloat(String s) {
        try {
            Float.parseFloat(s);
        } catch (Exception e) {
            return false;
        }
        // only got here if we didn't return false
        return true;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String input = inputval.getText().replaceAll("\\s", "");

        if (isFloat(input)) {

            if (sideradio.isSelected()) {
                if (perimeter.isSelected()) {
                    float resultval = (4 * Float.parseFloat(input));
                    String output = String.format("%.3f", resultval);
                    result.setText(output);
                } else if (area.isSelected()) {
                    float resultval = (Float.parseFloat(input) * Float.parseFloat(input));
                    String output = String.format("%.3f", resultval);
                    result.setText(output);
                }
                //if nothing is selected that test case is remaining

            } else if (diagonalradio.isSelected()) {
                //calculating side
                float side = Float.parseFloat(input) / (float) 1.414;

                if (perimeter.isSelected()) {
                    float resultval = (4 * side);
                    String output = String.format("%.3f", resultval);
                    result.setText(output);
                } else if (area.isSelected()) {
                    float resultval = (side * side);
                    String output = String.format("%.3f", resultval);
                    result.setText(output);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Select Appropriate Input Source (Side/Diagonal)", "Warning!", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Enter valid input!", "Warning!", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void sideradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sideradioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sideradioActionPerformed

    private void perimeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perimeterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_perimeterActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        Mensuration m = new Mensuration();
        m.setVisible(true);
        dispose();
    }//GEN-LAST:event_backbtnActionPerformed

    private void resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Square_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Square_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Square_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Square_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Square_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton area;
    private javax.swing.JButton backbtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JRadioButton diagonalradio;
    private javax.swing.JTextField inputval;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton perimeter;
    private javax.swing.JTextField result;
    private javax.swing.JRadioButton sideradio;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manualtesting;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JFrame;

/**
 *
 * @authors Piyush Rajendra Chaudhari <piyushrc26@gmail.com>
 * Rohit Balasaheb Bangar    <bangarrohit7057@gmail.com>
 * Shalakha Vijaykumar Bang  <shalakhabang99@gmail.com>
 * Mayuresh Rajesh Dindorkar <dmayuresh99@gmail.com>
 *
 * Project Name: FUN WITH NUMBERS Objective: Swing and AWT based Graphical User
 * Interface Java Application intended for learning Manual Testing.*
 *
 * Date: 05 September 2020. Day: Saturday
 */
public class Conversion extends javax.swing.JFrame {

    /**
     * Creates new form Conversion
     */
    public Conversion() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setResizable(true);
        this.getContentPane().setBackground(new Color(229, 209, 255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        from_length = new javax.swing.JComboBox<>();
        to_length = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        calc_length = new javax.swing.JButton();
        input_length = new javax.swing.JTextField();
        result_length = new javax.swing.JTextField();
        input_temp = new javax.swing.JTextField();
        result_temp = new javax.swing.JTextField();
        calc_temp = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        from_temp = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        to_temp = new javax.swing.JComboBox<>();
        backbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fun With Numbers");
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Conversions");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(610, 110, 210, 40);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel2.setText("Length Conversion");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(340, 210, 160, 30);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Temperature Conversion");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(840, 200, 230, 40);

        from_length.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        from_length.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilometer", "Meter", "Inches" }));
        from_length.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_lengthActionPerformed(evt);
            }
        });
        getContentPane().add(from_length);
        from_length.setBounds(280, 370, 130, 32);

        to_length.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        to_length.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilometer", "Meter", "Inches" }));
        getContentPane().add(to_length);
        to_length.setBounds(470, 370, 130, 32);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel4.setText("From");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(220, 370, 50, 26);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel5.setText("To");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(440, 370, 40, 30);

        calc_length.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        calc_length.setText("Calculate");
        calc_length.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        calc_length.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calc_lengthActionPerformed(evt);
            }
        });
        getContentPane().add(calc_length);
        calc_length.setBounds(330, 500, 150, 40);

        input_length.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        getContentPane().add(input_length);
        input_length.setBounds(310, 280, 200, 40);

        result_length.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        result_length.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                result_lengthActionPerformed(evt);
            }
        });
        getContentPane().add(result_length);
        result_length.setBounds(310, 440, 200, 40);

        input_temp.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        getContentPane().add(input_temp);
        input_temp.setBounds(840, 280, 200, 40);

        result_temp.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        result_temp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                result_tempActionPerformed(evt);
            }
        });
        getContentPane().add(result_temp);
        result_temp.setBounds(840, 440, 200, 40);

        calc_temp.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        calc_temp.setText("Calculate");
        calc_temp.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 0)));
        calc_temp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calc_tempActionPerformed(evt);
            }
        });
        getContentPane().add(calc_temp);
        calc_temp.setBounds(870, 500, 150, 40);

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel6.setText("From");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(730, 370, 50, 26);

        from_temp.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        from_temp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));
        from_temp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_tempActionPerformed(evt);
            }
        });
        getContentPane().add(from_temp);
        from_temp.setBounds(790, 370, 130, 32);

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel7.setText("To");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(960, 370, 40, 26);

        to_temp.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        to_temp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));
        getContentPane().add(to_temp);
        to_temp.setBounds(990, 370, 130, 32);

        backbtn.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        backbtn.setText("BACK");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });
        getContentPane().add(backbtn);
        backbtn.setBounds(40, 670, 120, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void result_lengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_result_lengthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_result_lengthActionPerformed

    private void from_tempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_tempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_from_tempActionPerformed

    public static boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
        } catch (Exception e) {
            return false;
        }
        // only got here if we didn't return false
        return true;
    }

    private void calc_lengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calc_lengthActionPerformed
        // TODO add your handling code here:
        String input_len_val = input_length.getText().replaceAll("\\s", "");
        String from_val = (String) from_length.getSelectedItem();
        String to_val = (String) to_length.getSelectedItem();

        if (isDouble(input_len_val)) {
            if (!from_val.equals(to_val)) {
                if (from_val.equals("Kilometer")) {
                    switch (to_val) {
                        case "Meter": {
                            double output = Double.parseDouble(input_len_val) * 1000;
                            String output_str = String.format("%.3f", output);
                            result_length.setText(output_str);
                            break;
                        }

                        case "Inches": {

                            double output = Double.parseDouble(input_len_val) * 39370.1;
                            String output_str = String.format("%.3f", output);
                            result_length.setText(output_str);
                            break;
                        }
                    }
                } else if (from_val.equals("Meter")) {
                    switch (to_val) {
                        case "Kilometer": {
                            double output = Double.parseDouble(input_len_val) / 1000;
                            String output_str = String.format("%.3f", output);
                            result_length.setText(output_str);
                            break;
                        }

                        case "Inches": {

                            double output = Double.parseDouble(input_len_val) * 39.37;
                            String output_str = String.format("%.3f", output);
                            result_length.setText(output_str);
                            break;
                        }
                    }

                } else if (from_val.equals("Inches")) {
                    switch (to_val) {
                        case "Kilometer": {
                            double output = Double.parseDouble(input_len_val) / 39370;
                            String output_str = String.format("%.3f", output);
                            result_length.setText(output_str);
                            break;
                        }

                        case "Meter": {
                            double output = Double.parseDouble(input_len_val) / 39.37;
                            String output_str = String.format("%.3f", output);
                            result_length.setText(output_str);
                            break;
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "To and From choices must be different.", "Warning!", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Enter valid input!", "Warning!", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_calc_lengthActionPerformed

    private void from_lengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_lengthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_from_lengthActionPerformed

    private void calc_tempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calc_tempActionPerformed
        // TODO add your handling code here:
        String input_temp_val = input_temp.getText().replaceAll("\\s", "");
        String from_val = (String) from_temp.getSelectedItem();
        String to_val = (String) to_temp.getSelectedItem();

        if (isDouble(input_temp_val)) {
            if (!from_val.equals(to_val)) {
                if (from_val.equals("Celsius")) {
                    switch (to_val) {
                        case "Fahrenheit": {
                            double output = ((Double.parseDouble(input_temp_val) / 5) * 9) + 32;
                            String output_str = String.format("%.3f", output);
                            result_temp.setText(output_str);
                            break;
                        }

                        case "Kelvin": {

                            double output = Double.parseDouble(input_temp_val) + 273.15;
                            String output_str = String.format("%.3f", output);
                            result_temp.setText(output_str);
                            break;
                        }
                    }
                } else if (from_val.equals("Fahrenheit")) {
                    switch (to_val) {
                        case "Celsius": {
                            double output = ((Double.parseDouble(input_temp_val) - 32) * 5) / 9;
                            String output_str = String.format("%.3f", output);
                            result_temp.setText(output_str);
                            break;
                        }

                        case "Kelvin": {

                            double output = ((Double.parseDouble(input_temp_val) + 459.67) * 5) / 9;
                            String output_str = String.format("%.3f", output);
                            result_temp.setText(output_str);
                            break;
                        }
                    }

                } else if (from_val.equals("Kelvin")) {
                    switch (to_val) {
                        case "Celsius": {
                            double output = Double.parseDouble(input_temp_val) - 273.15;
                            String output_str = String.format("%.3f", output);
                            result_temp.setText(output_str);
                            break;
                        }

                        case "Fahrenheit": {
                            double output = ((Double.parseDouble(input_temp_val) * 9) / 5) - 459.67;
                            String output_str = String.format("%.3f", output);
                            result_temp.setText(output_str);
                            break;
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "To and From choices must be different.", "Warning!", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Enter valid input!", "Warning!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_calc_tempActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        First_frame f = new First_frame();
        f.setVisible(true);
        dispose();

    }//GEN-LAST:event_backbtnActionPerformed

    private void result_tempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_result_tempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_result_tempActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JButton calc_length;
    private javax.swing.JButton calc_temp;
    private javax.swing.JComboBox<String> from_length;
    private javax.swing.JComboBox<String> from_temp;
    private javax.swing.JTextField input_length;
    private javax.swing.JTextField input_temp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField result_length;
    private javax.swing.JTextField result_temp;
    private javax.swing.JComboBox<String> to_length;
    private javax.swing.JComboBox<String> to_temp;
    // End of variables declaration//GEN-END:variables
}
